1.1:Data Query Language

1) SQL>SELECT STAFF_NAME,DESIGN_CODE
   FROM STAFFMASTER 
   WHERE (HIREDATE <'01-JAN-2003') AND STAFF_SAL BETWEEN 12000 AND 25000;
2) SQL>SELECT STAFF_CODE,STAFF_NAME,DEPT_CODE
   FROM STAFFMASTER  
   WHERE (MONTHS_BETWEEN(SYSDATE,HIREDATE))>=216  
   ORDER BY HIREDATE DESC;
3) SQL>SELECT * 
   FROM STAFFMASTER 
   WHERE MGR_CODE IS NULL;
4) SQL>SELECT * 
   FROM BOOK_MASTER 
   WHERE BOOK_PUB_YEAR BETWEEN 2001 AND 2004 AND BOOK_NAME LIKE '%"&"%';
5) SQL>SELECT STAFF_NAME 
   FROM STAFFMASTER 
   WHERE STAFF_NAME LIKE '%_%';

2.1:Single Row Functions:

1) SQL>SELECT STAFF_NAME,'$'||STAFF_SAL AS STAFF_SALARY 
   FROM STAFFMASTER;
2) SQL>SELECT STUDENT_NAME,TO_CHAR(STUDENTDOB,'MONTH DD YYYY') AS STUDENT_DOB 
   FROM STUDENTMASTER 
   WHERE TO_CHAR(STUDENTDOB,'DAY') LIKE  ('%SATURDAY%') OR TO_CHAR(STUDENTDOB,'DAY') LIKE ('%SUNDAY%');
3) SQL> SELECT STAFF_NAME,ROUND(MONTHS_BETWEEN(SYSDATE,HIREDATE)) AS MONTHS_WORKED 
   FROM STAFFMASTER 
   ORDER BY MONTHS_WORKED DESC;
4) SQL>SELECT * 
   FROM STAFFMASTER  
   WHERE TO_CHAR(HIREDATE,'DD') BETWEEN 1 AND 15 AND TO_CHAR(HIREDATE,'MONTH') LIKE '%DECEMBER%';
5) SQL>SELECT STAFF_NAME,STAFF_SAL,
	CASE 
	WHEN STAFF_SAL >=50000 THEN 'A'  
	WHEN STAFF_SAL  >25000 AND  STAFF_SAL<50000 THEN 'B' 
	WHEN STAFF_SAL  >10000 AND  STAFF_SAL<25000 THEN 'C' 
	ELSE 'D' 
	END CASE
	FROM STAFFMASTER;
6) SQL>SELECT STAFF_NAME,TO_CHAR(HIREDATE,'DD MONTH YYYY') AS HIRE_DATE,TO_CHAR(HIREDATE,'DAY')AS DAY 
   FROM STAFF_MASTER  
   ORDER BY TO_CHAR(HIREDATE,'DAY') DESC;
7) SQL> SELECT INSTR('Mississippi','i',2,3) 
   FROM DUAL;
8) SQL>SELECT TO_CHAR(NEXT_DAY(SYSDATE,'TUESDAY'),'DD MONTH ,YYYY') AS DAY 
   FROM DUAL  
   WHERE NEXT_DAY(SYSDATE,'TUESDAY')<LAST_DAY(SYSDATE);
9) SQL> SELECT STUDENT_CODE,STUDENT_NAME,DECODE(DEPT_CODE,20,'ELECTRICALS',30,'ELECTRONICS','OTHERS') DEPARTMENT_NAME 
   FROM STUDENT_MASTER;

2.2:Group Functions:

1)



3.1:Joins and Subqueries:

1) SQL> SELECT S.STAFF_NAME,
   D.DEPT_CODE,D.DEPT_NAME,S.STAFF_SAL
   FROM STAFFMASTER S,DEPARTMENT_MASTER D
   WHERE S.DEPT_CODE=D.DEPT_CODE AND STAFF_SAL>20000;
2) SQL> SELECT S.STAFF_CODE AS STAFF#,S.STAFF_NAME AS STAFF,D.DEPT_NAME,S.MGR_CODE AS MGR#
   FROM STAFFMASTER S,DEPARTMENT_MASTER D
   WHERE S.DEPT_CODE=D.DEPT_CODE;
3) SQL> SELECT S.STUDENT_CODE,S.STUDENT_NAME,B.BOOK_CODE,BB.BOOK_NAME  
   FROM STUDENTMASTER S,BOOK_TRANSACTIONS B, BOOK_MASTER BB 
   WHERE S.STUDENT_CODE=B.STUDENT_CODE AND TO_CHAR(B.BOOK_EXPECTED_RETURN_DATE,'DD MM YYYY')LIKE TO_CHAR(SYSDATE,'DD MM YYYY');
4) SQL>SELECT S.STAFF_CODE,S.STAFF_NAME,D.DEPT_NAME,F.DESIGN_NAME,G.BOOK_NAME,H.BOOK_ISSUE_DATE 
   FROM STAFFMASTER S,DEPARTMENT_MASTER D,DESIGNATION-MASTER F,BOOK_MASTER F,BOOK_ISSUE_DATE H
   WHERE MONTHS_BETWEEN(TO_CHAR(H.BOOK_ISSUE_DATE,'MM'),TO_CHAR(SYSDATE,'MM'))<1;
5) 

6) SQL>SELECT Staff_Code, Staff_Name,STAFF_SAL   
   FROM STAFFMASTER 
   WHERE STAFF_SAL<(SELECT AVG(STAFF_SAL) 
   FROM STAFFMASTER;
7) SQL>SELECT AUTHOR,BOOK_NAME 
   FROM BOOK_MASTER 
   GROUP BY AUTHORNAME HAVING COUNT(AUTHOR)>1;
8) SQL>SELECT S.Staff_Code,D.Staff_Name,D.DEPT_NAME 
   FROM STAFFMASTER S,BOOK_TRANSACTIONS D 
   GROUP BY S.STAFF_NAME 
   HAVING COUNT(D.STAFF_NAME)>1;
9) SQL>SELECT S.STUDENT_CODE,S.STUDENT_NAME,D.DEPT_NAME 
   FROM STAFFMASTER S,DEPARTMENT_MASTER D 
   GROUP BY S.DEPT_CODE 
   HAVING MAX(S.DEPT_CODE);
10) SQL>SELECT S.Staff_Code,S.Staff_Name,D.DEPT_NAME,F.DESIGN_NAME 
    FROM STAFFMASTER S, DEPARTMENT_MASTER D,DESIGNATION_MASTER F 
    WHERE MONTHS_BETWEEN(TO_CHAR(HIREDATE,'MM'),TO_CHAR(SYSDATE,'MM'))<3;
11) 

12)

13) SQL> SELECT DEPT_CODE,DEPT_NAME,COUNT(S.STAFF_NAME) AS NUMBEROFPEOPLE 
    FROM STAFFMASTER S,DEPARTMENT_MASTER D 
    GROUP BY DEPT_CODE;

4.1:DataBase Objects

1) SQL>create table customer(customerid number(5),cust_name varchar2(20),Address1 varchar2(30),Address2 varchar2(30));
2) SQL>Alter table customer rename column cust_name to customername;
   SQL>Alter table customer modify customername  varchar2(30) Not Null;
3) SQL>Alter table customer add Gender varchar2(1);
   SQL>Alter table customer add Age Number(3);
   SQL>Alter table customer add phoneNo(10);
   b)rename the customer table to cust_table.
   SQL>Rename customer to cust_table;
4) ==>insert into cust_table(&Customerid,'&cust_Name','&Address1','&Address2','&Gender',&Age,&phoneNo);
   ==>1000, ‘Allen’, ‘#115 Chicago’, ‘#115 Chicago’, ‘M’, ‘25, 7878776’
   ==>1001, George, #116 France, #116 France, M, 25, 434524
   ==>1002, Becker, #114 New York, #114 New York, M, 45, 431525
5) ==>Alter table cust_table add constraints Custid_prim PRIMARY KEY(customerid);
6) 
7)  ==>Alter table cust_table drop PRIMARY KEY custid_prim;
8)  ==>Alter table cust_table add constraints Custid_prim PRIMARY KEY(customerid);
9)  ==>Alter table cust_table drop PRIMARY KEY custid_prim;
    ==>Insert into cust_table(1002, Becker, #114 New York, #114 New york , M, 45,431525, 15000.50);
    ==>Insert into cust_table(1003, Nanapatekar, #115 India, #115 India , M, 45, 431525,20000.50);
10) ==>TRUNCATE table cust_table;
11) ==>Alter table add e_mail varchar2(30);
12) ==>Alter table cust_table DROP e_mail;
13) ==>create table Suppliers as select(customerid as suppid,customername as sname,adddress1 as addr1,address2 as addr2,phoneno as contactno) 
    from cust_table;
14) ==>Drop table Suppliers;
    ==>create table customermaster(customerid(10) primary key(custid_pk),customername varchar2(30),Address1 varchar2(30),Address2 varchar2(30),Gender varchar2(1),Age number(3),phoneno number(10));
15) ==>Create table Accoutnmaster(customerid number(5),Accountnumber number(10) primary key(acno),accounttype char(3),ledgerbalance number(10) Not Null);
    ==>Create sequence seq_ano
		MINVALUE 101
		MAXVALUE 10000
		START WITH 101
		INCREMENT BY 1
		CACHE 101;
16) ==>Alter table Accountmaster ADD constraint ass_fk FOREIGN KEY(customerid) REFERENCES customermaster(customerid);
17) ==>Insert into customermaster values(1000, Allen, #115 Chicago, #115 Chicago, M, 25, 7878776);
    ==>Insert into customermaster values(1001, George, #116 France, #116 France, M, 25, 4345240;
    ==>Insert into customermaster values(1002, Becker, #114 New York, #114 New York, M, 45, 4315250;
18) ==>alter table Accountmaster add constraint ck_ac check(accountype='NRI' or accountype='IND');
19) ==>alter table Accountmaster add constraint Balance_check(ledger balance>5000);
20) ==>Delete from Accountmaster,customertable where customerid = 1001;
21) ==>Create table accountdetails as select * from Accountmaster;
22) ==>CREATE VIEW Acc_view AS SELECT(Customerid,Customername,Accountnumber,AccountType,ledgerBalance)
	from AccountMaster;

 
 
 
 
 
 
 

    
 

